{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,GACPC,EAAO,GAQb,SAASC,EAAaC,GAuBtB,IAAoBC,EAtBlBD,EAAEE,iBAsBgBD,EArBPJ,EAAKI,KAsBhB,IAAIE,SAASF,GAAMG,SAAQ,SAACC,EAAOC,GACjCR,EAAKQ,IAAQD,C,IAtBf,IAAIE,EAAQ,EAEZA,GAAST,EAAKU,MAEdC,YAAW,WACT,IAAK,IAAIC,EAAI,EAAGA,GAAKZ,EAAKa,OAAQD,IAChCE,EAAcF,EAAGH,GACdM,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUP,EAAKM,EAALN,MACjBb,EAAAqB,OAAOC,QAAQ,qBAAoCC,OAAfH,EAAS,QAAYG,OAANV,EAAM,M,IAE1DW,OAAM,SAAAL,G,IAAGC,EAAQD,EAARC,SAAUP,EAAKM,EAALN,MAClBb,EAAAqB,OAAOI,QAAQ,oBAAmCF,OAAfH,EAAS,QAAYG,OAANV,EAAM,M,IAE5DD,GAAST,EAAKuB,I,GAEfd,GAEHV,EAAKI,KAAKqB,O,CASZ,SAASV,EAAcG,EAAUP,GAC/B,IAAMe,EAAO,CAACR,WAAUP,SACxB,OAAO,IAAIgB,SAAQ,SAACC,EAASC,GAC3BjB,YAAW,WACakB,KAAKC,SAAW,IAGpCH,EAAQF,GAGVG,EAAOH,E,GACNf,E,IA9CPqB,SAASC,iBAAiB,oBAAoB,WAC5CjC,EAAKI,KAAO4B,SAASE,cAAc,SAEnClC,EAAKI,KAAK6B,iBAAiB,SAAU/B,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst refs = {};\nconst opts = {};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  refs.form = document.querySelector('.form');\n\n  refs.form.addEventListener('submit', handleSubmit);\n});\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n  gatherData(refs.form);\n  let delay = 0;\n\n  delay += opts.delay;\n\n  setTimeout(() => {\n    for (let i = 1; i <= opts.amount; i++) {\n      createPromise(i, delay)\n        .then(({ position, delay }) => {\n          Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        });\n      delay += opts.step;\n    }\n  }, delay);\n\n  refs.form.reset();\n}\n\nfunction gatherData(form) {\n  new FormData(form).forEach((value, key) => {\n    opts[key] = +value;\n  });\n}\n\nfunction createPromise(position, delay) {\n  const data = {position, delay};\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve(data);\n      }\n\n      reject(data);\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","$ce04d3a99e08e73b$var$opts","$ce04d3a99e08e73b$var$handleSubmit","e","form","preventDefault","FormData","forEach","value","key","delay1","delay","setTimeout","i","amount","$ce04d3a99e08e73b$var$createPromise","then","param","position","Notify","success","concat","catch","failure","step","reset","data","Promise","resolve","reject","Math","random","document","addEventListener","querySelector"],"version":3,"file":"03-promises.35a21d62.js.map"}